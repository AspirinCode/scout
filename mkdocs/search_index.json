{
    "docs": [
        {
            "location": "/", 
            "text": "Scout\n\n\nAnalyze VCFs quicker and easier.\n\n\n\n\nIntroduction\n\n\nScout is a web-based \nvisualizer for VCF files\n intended for a clinical audience. Analysis of genomics data generates massive amounts of information. Our tool bridges the gap between the raw output and something that anyone with genetic background can use to analyze and filter out interesting variants involved in rare inherited diseases. Scout also leverages it's centralized database to enable team collaboration through user comments, prioritization and customizable sharing of cases.\n\n\nGetting Started\n\n\nThe general work flow when you work in Scout look something like this:\n\n\nLog in to access your institute's data\n\n\nEach user can belong to one or more \"institutes\" which is used to determine what data you are allowed to see. We rely on \nGoogle OAuth\n to facilitate the authentication by using Google accounts.\n\n\nReview the status of ongoing cases\n\n\nThis view provides a high level overview of all your institutes cases. You can see who is assigned a case, whether new data has recently been uploaded, the type of sequencing etc.\n\n\nMore to come...\n\n\nContributing\n\n\nSee \nDevelopment\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#scout", 
            "text": "Analyze VCFs quicker and easier.", 
            "title": "Scout"
        }, 
        {
            "location": "/#introduction", 
            "text": "Scout is a web-based  visualizer for VCF files  intended for a clinical audience. Analysis of genomics data generates massive amounts of information. Our tool bridges the gap between the raw output and something that anyone with genetic background can use to analyze and filter out interesting variants involved in rare inherited diseases. Scout also leverages it's centralized database to enable team collaboration through user comments, prioritization and customizable sharing of cases.", 
            "title": "Introduction"
        }, 
        {
            "location": "/#getting-started", 
            "text": "The general work flow when you work in Scout look something like this:", 
            "title": "Getting Started"
        }, 
        {
            "location": "/#log-in-to-access-your-institutes-data", 
            "text": "Each user can belong to one or more \"institutes\" which is used to determine what data you are allowed to see. We rely on  Google OAuth  to facilitate the authentication by using Google accounts.", 
            "title": "Log in to access your institute's data"
        }, 
        {
            "location": "/#review-the-status-of-ongoing-cases", 
            "text": "This view provides a high level overview of all your institutes cases. You can see who is assigned a case, whether new data has recently been uploaded, the type of sequencing etc.", 
            "title": "Review the status of ongoing cases"
        }, 
        {
            "location": "/#more-to-come", 
            "text": "", 
            "title": "More to come..."
        }, 
        {
            "location": "/#contributing", 
            "text": "See  Development .", 
            "title": "Contributing"
        }, 
        {
            "location": "/install/", 
            "text": "Install Scout\n\n\nThis guide will walk you through bootstrapping a development environment.\nThe instructions are divided into multiple sections.\n\n\n0. Intro\n\n\nScout mainly consists of 3 moving parts that each must be installed\nseparately. Runtime requirements include Python and MongoDB. Development\nand asset compilation requires Node.js.\n\n\n1. Install\n\n\nLet's start by pulling down the GitHub repository with the source code.\n\n\n$ git clone https://github.com/Clinical-Genomics/scout\n$ cd scout\n\n\n\n\nThe Scout repo contains a Bash script with full installation instructions\nfor Ubuntu. I will from this point on assume that you have \nVagrant\n\ninstalled on you local development machine. If you plan to setup the\nproject in any other way you should take a closer look at the \nVagrantfile\n\nand the \nprovision.sh\n script.\n\n\n$ vagrant up\n$ vagrant ssh\n$ cd /vagrant\n\n\n\n\n2. Configure\n\n\nYou need to sign up for access to a few web APIs like Google OAuth and\nOMIM to make full use of Scout. The keys and secrets should be added to\nthe Flask instance config. To learn more about possible settings, take a\nlook in the \nscout/settings.py\n module.\n\n\nGoogle OAuth\n\n\nCreate a new project in your \nGoogle Developer console\n.\nUnder your project, click \"APIs \n auth\" \n \"Credentials\". Here you will\nfind your \"CLIENT ID\" and \"CLIENT SECRET\". You also need to add some\n\"REDIRECT URLS\" and \"JAVASCRIPT ORIGINS\".\n\n\nREDIRECT URLS\n:\n\n\n\n\nhttp://localhost:5023/authorized\n\n\nhttps://localhost:5023/authorized\n\n\n\n\nJAVASCRIPT ORIGINS\n:\n\n\n\n\nhttp://localhost:5023\n\n\nhttps://localhost:5023\n\n\n\n\nRemember that it might take a while for the tokens to start working.\n\n\nOMIM API\n\n\nYou can \nregister\n for free OMIM API access. You will be\nsent the authentication token eventually :)\n\n\nGmail\n\n\nThe Sanger email feature requires credentials for a Gmail account. Any\naccount should work so you don't need to sign up for any special access.\n\n\nMongoDB\n\n\nIf you are using a password protected Mongo database you also need to add\nthe authentication details to the instance config.\n\n\n3. Boostrap\n\n\nWe use gulp.js to compile the statis assets (CSS, JS, etc.)\n\n\n$ gulp build --production\n\n\n\n\n4. Develop\n\n\nYou are now ready to start the development server and complete the setup\nin the admin interface.\n\n\n$ python manage.py -c \n$(pwd)/configs/boilerplate.cfg\n vagrant\n\n\n\n\nThat's it! Go and explore Scout.", 
            "title": "Install"
        }, 
        {
            "location": "/install/#install-scout", 
            "text": "This guide will walk you through bootstrapping a development environment.\nThe instructions are divided into multiple sections.", 
            "title": "Install Scout"
        }, 
        {
            "location": "/install/#0-intro", 
            "text": "Scout mainly consists of 3 moving parts that each must be installed\nseparately. Runtime requirements include Python and MongoDB. Development\nand asset compilation requires Node.js.", 
            "title": "0. Intro"
        }, 
        {
            "location": "/install/#1-install", 
            "text": "Let's start by pulling down the GitHub repository with the source code.  $ git clone https://github.com/Clinical-Genomics/scout\n$ cd scout  The Scout repo contains a Bash script with full installation instructions\nfor Ubuntu. I will from this point on assume that you have  Vagrant \ninstalled on you local development machine. If you plan to setup the\nproject in any other way you should take a closer look at the  Vagrantfile \nand the  provision.sh  script.  $ vagrant up\n$ vagrant ssh\n$ cd /vagrant", 
            "title": "1. Install"
        }, 
        {
            "location": "/install/#2-configure", 
            "text": "You need to sign up for access to a few web APIs like Google OAuth and\nOMIM to make full use of Scout. The keys and secrets should be added to\nthe Flask instance config. To learn more about possible settings, take a\nlook in the  scout/settings.py  module.", 
            "title": "2. Configure"
        }, 
        {
            "location": "/install/#google-oauth", 
            "text": "Create a new project in your  Google Developer console .\nUnder your project, click \"APIs   auth\"   \"Credentials\". Here you will\nfind your \"CLIENT ID\" and \"CLIENT SECRET\". You also need to add some\n\"REDIRECT URLS\" and \"JAVASCRIPT ORIGINS\".  REDIRECT URLS :   http://localhost:5023/authorized  https://localhost:5023/authorized   JAVASCRIPT ORIGINS :   http://localhost:5023  https://localhost:5023   Remember that it might take a while for the tokens to start working.", 
            "title": "Google OAuth"
        }, 
        {
            "location": "/install/#omim-api", 
            "text": "You can  register  for free OMIM API access. You will be\nsent the authentication token eventually :)", 
            "title": "OMIM API"
        }, 
        {
            "location": "/install/#gmail", 
            "text": "The Sanger email feature requires credentials for a Gmail account. Any\naccount should work so you don't need to sign up for any special access.", 
            "title": "Gmail"
        }, 
        {
            "location": "/install/#mongodb", 
            "text": "If you are using a password protected Mongo database you also need to add\nthe authentication details to the instance config.", 
            "title": "MongoDB"
        }, 
        {
            "location": "/install/#3-boostrap", 
            "text": "We use gulp.js to compile the statis assets (CSS, JS, etc.)  $ gulp build --production", 
            "title": "3. Boostrap"
        }, 
        {
            "location": "/install/#4-develop", 
            "text": "You are now ready to start the development server and complete the setup\nin the admin interface.  $ python manage.py -c  $(pwd)/configs/boilerplate.cfg  vagrant  That's it! Go and explore Scout.", 
            "title": "4. Develop"
        }, 
        {
            "location": "/topics/hpo/", 
            "text": "HPO phenotypes\n\n\nFor every case you have the opportunity to add related HPO phenotype terms to describe the phenotype of the patient(s). This structured data can then be used in some interesting ways. You access all these features from the case page.\n\n\nHPO gene panel\n\n\nEvery HPO term is linked to a set of genes. It it interesting to see which genes that overlap with your phenotype terms. To generate such a list, locate the \"HPO panel\" button. You can optionally select which terms to include by using the checkboxes next to the HPO terms.\n\n\nBy default only genes matching \nevery\n selected HPO term is returned. This setting can be customized by entering the minimum number of HPO terms a gene is required to overlap.\n\n\n\n\nThe panel is only stored until a user regenerates the panel!\n\n\n\n\nThe generated panel will show up just below under \"HPO gene panel\". To filter the list of variants using the generated panel, locate the \"HPO panels\" dropdown in the top bar on the \"variants\" page.\n\n\nPhenomizer diseases\n\n\nThe second option is to use the same HPO terms as input to the \nPhenomizer\n service. This will use you selected phenotypes to look up possible OMIM diseases. You will be presented with all hits on a new page where you can select which diseases to proceed with.\n\n\nPhenomizer associates a P-value with each disease which tells you something about the likelihood of each disease match. You can also see which genes are associated with every disease in the last column.\n\n\nWhen you've made your selection, click \"Select\" at the bottom of the table. Scout will then store all the associated genes and list them in the \"HPO gene panel\" list on the \"case\" page.", 
            "title": "Hpo"
        }, 
        {
            "location": "/topics/hpo/#hpo-phenotypes", 
            "text": "For every case you have the opportunity to add related HPO phenotype terms to describe the phenotype of the patient(s). This structured data can then be used in some interesting ways. You access all these features from the case page.", 
            "title": "HPO phenotypes"
        }, 
        {
            "location": "/topics/hpo/#hpo-gene-panel", 
            "text": "Every HPO term is linked to a set of genes. It it interesting to see which genes that overlap with your phenotype terms. To generate such a list, locate the \"HPO panel\" button. You can optionally select which terms to include by using the checkboxes next to the HPO terms.  By default only genes matching  every  selected HPO term is returned. This setting can be customized by entering the minimum number of HPO terms a gene is required to overlap.   The panel is only stored until a user regenerates the panel!   The generated panel will show up just below under \"HPO gene panel\". To filter the list of variants using the generated panel, locate the \"HPO panels\" dropdown in the top bar on the \"variants\" page.", 
            "title": "HPO gene panel"
        }, 
        {
            "location": "/topics/hpo/#phenomizer-diseases", 
            "text": "The second option is to use the same HPO terms as input to the  Phenomizer  service. This will use you selected phenotypes to look up possible OMIM diseases. You will be presented with all hits on a new page where you can select which diseases to proceed with.  Phenomizer associates a P-value with each disease which tells you something about the likelihood of each disease match. You can also see which genes are associated with every disease in the last column.  When you've made your selection, click \"Select\" at the bottom of the table. Scout will then store all the associated genes and list them in the \"HPO gene panel\" list on the \"case\" page.", 
            "title": "Phenomizer diseases"
        }, 
        {
            "location": "/user-guide/annotations/", 
            "text": "Annotations\n\n\nThis page will describe what is displayed in scout, what the different annotations mean and how they are parsed from the vcf file.\n\n\nFrequencies\n\n\n1000G\n\n\nThe frequency from the \n1000G\n population database. This is collected from the key \n1000GAF\n from the info field of the vcf record and expects a single float.\n\n\n1000G_MAX_AF\n\n\nThe maximum allele frequency of all populations in the 1000G population database. This is collected from the key \n1000G_MAX_AF\n from the info field of the vcf record and expects a single float.\n\n\nExAC\n\n\nThe frequency from the ExAC population database. This is collected from the key \nEXACAF\n from the info field of the vcf record and expects a single float.\n\n\nExAC_MAX_AF\n\n\nThe maximum allele frequency of all populations ExAC population database. This is collected from the key \nExAC_MAX_AF\n from the info field of the vcf record and expects a single float.\n\n\nSeverity\n\n\nCADD score\n\n\nThe predicted deleteriousness for a variants. This is collected from the key \nCADD\n from the info field of the vcf record and expects a single float.\n\n\nConservation\n\n\nGerp\n\n\nThe gerp conservation string. This is collected from the key \nGERP++_RS_prediction_term\n from the info field of the vcf record and expects a string.\n\n\nphastCons\n\n\nThe gerp conservation string. This is collected from the key \nGERP++_RS_prediction_term\n from the info field of the vcf record and expects a string.\n\n\nphylop\n\n\nThe phylop 100 way predicted conservation string. This is collected from the key \nphyloP100way_vertebrate_prediction_term\n from the info field of the vcf record and expects a string.", 
            "title": "Annotations"
        }, 
        {
            "location": "/user-guide/annotations/#annotations", 
            "text": "This page will describe what is displayed in scout, what the different annotations mean and how they are parsed from the vcf file.", 
            "title": "Annotations"
        }, 
        {
            "location": "/user-guide/annotations/#frequencies", 
            "text": "", 
            "title": "Frequencies"
        }, 
        {
            "location": "/user-guide/annotations/#1000g", 
            "text": "The frequency from the  1000G  population database. This is collected from the key  1000GAF  from the info field of the vcf record and expects a single float.", 
            "title": "1000G"
        }, 
        {
            "location": "/user-guide/annotations/#1000g_max_af", 
            "text": "The maximum allele frequency of all populations in the 1000G population database. This is collected from the key  1000G_MAX_AF  from the info field of the vcf record and expects a single float.", 
            "title": "1000G_MAX_AF"
        }, 
        {
            "location": "/user-guide/annotations/#exac", 
            "text": "The frequency from the ExAC population database. This is collected from the key  EXACAF  from the info field of the vcf record and expects a single float.", 
            "title": "ExAC"
        }, 
        {
            "location": "/user-guide/annotations/#exac_max_af", 
            "text": "The maximum allele frequency of all populations ExAC population database. This is collected from the key  ExAC_MAX_AF  from the info field of the vcf record and expects a single float.", 
            "title": "ExAC_MAX_AF"
        }, 
        {
            "location": "/user-guide/annotations/#severity", 
            "text": "", 
            "title": "Severity"
        }, 
        {
            "location": "/user-guide/annotations/#cadd-score", 
            "text": "The predicted deleteriousness for a variants. This is collected from the key  CADD  from the info field of the vcf record and expects a single float.", 
            "title": "CADD score"
        }, 
        {
            "location": "/user-guide/annotations/#conservation", 
            "text": "", 
            "title": "Conservation"
        }, 
        {
            "location": "/user-guide/annotations/#gerp", 
            "text": "The gerp conservation string. This is collected from the key  GERP++_RS_prediction_term  from the info field of the vcf record and expects a string.", 
            "title": "Gerp"
        }, 
        {
            "location": "/user-guide/annotations/#phastcons", 
            "text": "The gerp conservation string. This is collected from the key  GERP++_RS_prediction_term  from the info field of the vcf record and expects a string.", 
            "title": "phastCons"
        }, 
        {
            "location": "/user-guide/annotations/#phylop", 
            "text": "The phylop 100 way predicted conservation string. This is collected from the key  phyloP100way_vertebrate_prediction_term  from the info field of the vcf record and expects a string.", 
            "title": "phylop"
        }, 
        {
            "location": "/user-guide/cases/", 
            "text": "Cases\n\n\nThis page displays the list of active cases for a particular institute. Each item links to the detailed view for that case. You can filter the list by typing into the search box above the list.\n\n\nA quick link to get straight to the list of all clinical variants is also displayed. To indicate what cases have recently been added/updated, a \"last updated\" date is also displayed.\n\n\nSometimes you will also see a cyan colored dot to the left of the case ID. This is an indicator that there's been some recent activity in the case such as a new comment.\n\n\nYour name will be tagged for each case that is assigned to you. For cases that are assigned to other people you will see a tag \"ASSIGNED\".\n\n\n\n\nCase\n\n\nThis is the detailed view of one individual case. The intended use is to give a consise overview of the family under investigation and show recent activity related to the case.\n\n\nPinned variants\n\n\nThere's a list of \"Strong candidates\" on the page. This list is curated by the collaborators and consists of \"pinned\" variants from the variants list. This feature can be used to mark variants of particular interest that you might want to highlight to other users (See more under \"Variant\".)\n\n\nMisc.\n\n\nThe case page also displays a simple wiki-style synopsis on the current case that can be used to communicate information on the case to collaborators.\n\n\nThe \"Activity\" feed is a reverse chronological list of events and comments related to the case. Examples of events include comments, status updates, assignments, Sanger sequencing orders etc.\n\n\nActions\n\n\nThere are a few actions you can take on this page.\n\n\nAdopt case\n: By clicking the button next to \"Adopt\" you can assign yourself to a case unless someone else has already done so. If you have assigned yourself to a case you can click your name to \"unassign\".\n\n\nThe case can be moved to \"Research\" which means all variants will be made visible for the entire exome. Clicking \"Open research\" will notify the administrators of the site. The user agrees that she is reponsible to have acquired an informed consent relevant for this action. This will also be logged as a new event in the case log.\n\n\nEdit case synopsis\n: The case sysnopsis can be edited in a format known as [Markdown][markdown]. Just click \"EDIT\" to open the editor view. When you are finished click \"SAVE\" to save changes or \"CANCEL\" to abort.\n\n\nComment\n: You can leave comments in the activity log by writing a message in the input box next to the feed. Click \"COMMENT\" to submit the comment.", 
            "title": "Cases"
        }, 
        {
            "location": "/user-guide/cases/#cases", 
            "text": "This page displays the list of active cases for a particular institute. Each item links to the detailed view for that case. You can filter the list by typing into the search box above the list.  A quick link to get straight to the list of all clinical variants is also displayed. To indicate what cases have recently been added/updated, a \"last updated\" date is also displayed.  Sometimes you will also see a cyan colored dot to the left of the case ID. This is an indicator that there's been some recent activity in the case such as a new comment.  Your name will be tagged for each case that is assigned to you. For cases that are assigned to other people you will see a tag \"ASSIGNED\".", 
            "title": "Cases"
        }, 
        {
            "location": "/user-guide/cases/#case", 
            "text": "This is the detailed view of one individual case. The intended use is to give a consise overview of the family under investigation and show recent activity related to the case.", 
            "title": "Case"
        }, 
        {
            "location": "/user-guide/cases/#pinned-variants", 
            "text": "There's a list of \"Strong candidates\" on the page. This list is curated by the collaborators and consists of \"pinned\" variants from the variants list. This feature can be used to mark variants of particular interest that you might want to highlight to other users (See more under \"Variant\".)", 
            "title": "Pinned variants"
        }, 
        {
            "location": "/user-guide/cases/#misc", 
            "text": "The case page also displays a simple wiki-style synopsis on the current case that can be used to communicate information on the case to collaborators.  The \"Activity\" feed is a reverse chronological list of events and comments related to the case. Examples of events include comments, status updates, assignments, Sanger sequencing orders etc.", 
            "title": "Misc."
        }, 
        {
            "location": "/user-guide/cases/#actions", 
            "text": "There are a few actions you can take on this page.  Adopt case : By clicking the button next to \"Adopt\" you can assign yourself to a case unless someone else has already done so. If you have assigned yourself to a case you can click your name to \"unassign\".  The case can be moved to \"Research\" which means all variants will be made visible for the entire exome. Clicking \"Open research\" will notify the administrators of the site. The user agrees that she is reponsible to have acquired an informed consent relevant for this action. This will also be logged as a new event in the case log.  Edit case synopsis : The case sysnopsis can be edited in a format known as [Markdown][markdown]. Just click \"EDIT\" to open the editor view. When you are finished click \"SAVE\" to save changes or \"CANCEL\" to abort.  Comment : You can leave comments in the activity log by writing a message in the input box next to the feed. Click \"COMMENT\" to submit the comment.", 
            "title": "Actions"
        }, 
        {
            "location": "/user-guide/defining-scorescheme/", 
            "text": "Score scheme\n\n\nHow to score a variant is defined in a .ini file wich is written in a specific way.\nThe file is divided in sections, the first section is mandatory and is named \nVersion\n\n\nVersion\n\n\nThe file has to start with some meta data that looks like:\n\n\n[Version]\n        version = 0.1\n        name = rank_model_test\n\n\n\n\nThis is important so the user can backtrack which file that was used for a specific analysis.\n\n\nCategories\n\n\nThe Score is built by adding scores from different functions where each function has to belong to a category.\nThe idea with this is that one might not always want to score each function individually, for example if we look at allele frequencies we are most interested in that any of the frequencies are above a certain threshold.\nIf one frequency is low and another high we just want to use the score for the high frequency.\n\n\nA category has a name and a category rule, the different rules are \nmin, max, sum\n.\n\n\nso this section could look like:\n\n\n[Categories]\n    [[allele_frequency]]\n        category_aggregation = min\n\n [[Protein_prediction]]\n     category_aggregation = sum\n\n\n\n\nScore functions\n\n\nThe following sections in the file will represent score functions. Each function has variables\nto describe what field in the vcf file that is used, which category it belongs to, what data type we could expect, how the annotation is separated and what the rule is if there are multiple annotations.\n\n\nExample:\n\n\n[FILTER]\n    field = FILTER\n    data_type = string\n    category = Variant_call_quality_filter\n    record_rule = min\n    separators = ';',\n    description = The filters for the variant\n\n\n\n\nso the mandatory sections are:\n\n\nfield = #Any of the vcf fields\ndata_type = # 'integer','float','flag','character','string'\ncategory = # Any of the categories described above\nrecord_rule = # min, max\nseparators = # A list of separators\n\n\n\n\nIf field is \nINFO\n we also have to describe what \nINFO\n-key to use with\n\n\ninfo_key = # Any of the info keys", 
            "title": "Defining scorescheme"
        }, 
        {
            "location": "/user-guide/defining-scorescheme/#score-scheme", 
            "text": "How to score a variant is defined in a .ini file wich is written in a specific way.\nThe file is divided in sections, the first section is mandatory and is named  Version", 
            "title": "Score scheme"
        }, 
        {
            "location": "/user-guide/defining-scorescheme/#version", 
            "text": "The file has to start with some meta data that looks like:  [Version]\n        version = 0.1\n        name = rank_model_test  This is important so the user can backtrack which file that was used for a specific analysis.", 
            "title": "Version"
        }, 
        {
            "location": "/user-guide/defining-scorescheme/#categories", 
            "text": "The Score is built by adding scores from different functions where each function has to belong to a category.\nThe idea with this is that one might not always want to score each function individually, for example if we look at allele frequencies we are most interested in that any of the frequencies are above a certain threshold.\nIf one frequency is low and another high we just want to use the score for the high frequency.  A category has a name and a category rule, the different rules are  min, max, sum .  so this section could look like:  [Categories]\n    [[allele_frequency]]\n        category_aggregation = min\n\n [[Protein_prediction]]\n     category_aggregation = sum", 
            "title": "Categories"
        }, 
        {
            "location": "/user-guide/defining-scorescheme/#score-functions", 
            "text": "The following sections in the file will represent score functions. Each function has variables\nto describe what field in the vcf file that is used, which category it belongs to, what data type we could expect, how the annotation is separated and what the rule is if there are multiple annotations.  Example:  [FILTER]\n    field = FILTER\n    data_type = string\n    category = Variant_call_quality_filter\n    record_rule = min\n    separators = ';',\n    description = The filters for the variant  so the mandatory sections are:  field = #Any of the vcf fields\ndata_type = # 'integer','float','flag','character','string'\ncategory = # Any of the categories described above\nrecord_rule = # min, max\nseparators = # A list of separators  If field is  INFO  we also have to describe what  INFO -key to use with  info_key = # Any of the info keys", 
            "title": "Score functions"
        }, 
        {
            "location": "/user-guide/getting-started/", 
            "text": "Getting started with Scout\n\n\nScout is a web-based visualizer for VCF-files. It helps you manage multiple patient cases in a unified and intuative interface. You can collaborate with other clinicians and share comments and findings across your team.\n\n\nInstitutes, Cases, Variants\n\n\nScout has a few levels of abstraction to deal with the data it tries to present. Institutes contain multiple cases and group users into teams. Cases are usually the same as families or a group of related VCF-files - they all share a subset of called variants. Variants are individual genotype calls across a single case.\n\n\n\n\n[insert screenshot here]\n\n\n\n\nA case is an interesting concept worth expanding on. Given the context of diagnosing a Mendelian disorder, a case represents the investigation of typically a single family and the quest to find a single disease causing mutation.\n\n\nAs such there are some added features that try to support this process:\n\n\n\n\na case can be assigned to a user to delegate responsibility\n\n\nvarious variants can be pinned as worth looking at for the whole team\n\n\na feed keeps track of any case related activity in one single place\n\n\n\n\nA lot of time has been spent on the layout for the big list of variants as well as the single variant detail view. They are meant to give a quick overview to enable efficient scanning of the information. It is also in this direction they will evolve in the future.", 
            "title": "Getting started"
        }, 
        {
            "location": "/user-guide/getting-started/#getting-started-with-scout", 
            "text": "Scout is a web-based visualizer for VCF-files. It helps you manage multiple patient cases in a unified and intuative interface. You can collaborate with other clinicians and share comments and findings across your team.", 
            "title": "Getting started with Scout"
        }, 
        {
            "location": "/user-guide/getting-started/#institutes-cases-variants", 
            "text": "Scout has a few levels of abstraction to deal with the data it tries to present. Institutes contain multiple cases and group users into teams. Cases are usually the same as families or a group of related VCF-files - they all share a subset of called variants. Variants are individual genotype calls across a single case.   [insert screenshot here]   A case is an interesting concept worth expanding on. Given the context of diagnosing a Mendelian disorder, a case represents the investigation of typically a single family and the quest to find a single disease causing mutation.  As such there are some added features that try to support this process:   a case can be assigned to a user to delegate responsibility  various variants can be pinned as worth looking at for the whole team  a feed keeps track of any case related activity in one single place   A lot of time has been spent on the layout for the big list of variants as well as the single variant detail view. They are meant to give a quick overview to enable efficient scanning of the information. It is also in this direction they will evolve in the future.", 
            "title": "Institutes, Cases, Variants"
        }, 
        {
            "location": "/user-guide/loading/", 
            "text": "Loading Scout\n\n\nWhen loading a case into scout it is possible to use either a config file or to specify parameters on the command line.\n\n\nScout Load Config\n\n\nThe loading config is a \n.yaml\n file and can include all the necessary information to scout. Command line options will overload information in the config file.\n\n\nThe config file has the following specification:\n\n\nowner: str(mandatory)\n\nfamily: str(mandatory)\nsamples:\n  - analysis_type: str(optional), [wgs,wes]\n    sample_id: str(mandatory)\n    capture_kit: str(optional)\n    father: str(mandatory)\n    mother: str(mandatory)\n    sample_name: str(mandatory)\n    phenotype: str(mandatory), [affected, unaffected, unknown]\n    sex: str(mandatory), [male, female, unknown]\n    expected_coverage: int(mandatory)\n\nvcf_snv: str(optional)\nvcf_sv: str(optional)\nvcf_snv_research: str(optional)\nvcf_sv_research: str(optional)\n\nmadeline: str(optional)\ndefault_gene_panels: list[str](optional)\ngene_panels: list[str](optional)\n\n# meta data\nrank_model_version: float(optional)\nrank_score_threshold: float(optional)\nanalysis_date: datetime(optional)\nhuman_genome_build: str(optional)\n\n\n\n\nAn example file:\n\n\n---\n\nowner: cust000\n\nfamily: '643594'\nsamples:\n  - analysis_type: wes\n    sample_id: ADM1059A2\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: ADM1059A1\n    mother: ADM1059A3\n    sample_name: NA12882\n    phenotype: affected\n    sex: male\n    expected_coverage: 30\n  - analysis_type: wes\n    sample_id: ADM1059A1\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: '0'\n    mother: '0'\n    sample_name: NA12877\n    phenotype: unaffected\n    sex: male\n    expected_coverage: 30\n  - analysis_type: wes\n    sample_id: ADM1059A3\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: '0'\n    mother: '0'\n    sample_name: NA12878\n    phenotype: unaffected\n    sex: female\n    expected_coverage: 30\n\nvcf_snv: tests/fixtures/643594.clinical.vcf\nvcf_sv: tests/fixtures/643594.clinical.SV.vcf\nvcf_snv_research: tests/fixtures/643594.research.vcf\nvcf_sv_research: tests/fixtures/643594.research.SV.vcf\n\nmadeline: tests/fixtures/madeline.xml\ndefault_gene_panels: [panel1]\ngene_panels: [panel1]\n\n# meta data\nrank_model_version: 1.12\nrank_score_threshold: -100\nanalysis_date: 2016-10-12 14:00:46\nhuman_genome_build: GRCh.37", 
            "title": "Loading"
        }, 
        {
            "location": "/user-guide/loading/#loading-scout", 
            "text": "When loading a case into scout it is possible to use either a config file or to specify parameters on the command line.", 
            "title": "Loading Scout"
        }, 
        {
            "location": "/user-guide/loading/#scout-load-config", 
            "text": "The loading config is a  .yaml  file and can include all the necessary information to scout. Command line options will overload information in the config file.  The config file has the following specification:  owner: str(mandatory)\n\nfamily: str(mandatory)\nsamples:\n  - analysis_type: str(optional), [wgs,wes]\n    sample_id: str(mandatory)\n    capture_kit: str(optional)\n    father: str(mandatory)\n    mother: str(mandatory)\n    sample_name: str(mandatory)\n    phenotype: str(mandatory), [affected, unaffected, unknown]\n    sex: str(mandatory), [male, female, unknown]\n    expected_coverage: int(mandatory)\n\nvcf_snv: str(optional)\nvcf_sv: str(optional)\nvcf_snv_research: str(optional)\nvcf_sv_research: str(optional)\n\nmadeline: str(optional)\ndefault_gene_panels: list[str](optional)\ngene_panels: list[str](optional)\n\n# meta data\nrank_model_version: float(optional)\nrank_score_threshold: float(optional)\nanalysis_date: datetime(optional)\nhuman_genome_build: str(optional)  An example file:  ---\n\nowner: cust000\n\nfamily: '643594'\nsamples:\n  - analysis_type: wes\n    sample_id: ADM1059A2\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: ADM1059A1\n    mother: ADM1059A3\n    sample_name: NA12882\n    phenotype: affected\n    sex: male\n    expected_coverage: 30\n  - analysis_type: wes\n    sample_id: ADM1059A1\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: '0'\n    mother: '0'\n    sample_name: NA12877\n    phenotype: unaffected\n    sex: male\n    expected_coverage: 30\n  - analysis_type: wes\n    sample_id: ADM1059A3\n    capture_kit: Agilent_SureSelectCRE.V1\n    father: '0'\n    mother: '0'\n    sample_name: NA12878\n    phenotype: unaffected\n    sex: female\n    expected_coverage: 30\n\nvcf_snv: tests/fixtures/643594.clinical.vcf\nvcf_sv: tests/fixtures/643594.clinical.SV.vcf\nvcf_snv_research: tests/fixtures/643594.research.vcf\nvcf_sv_research: tests/fixtures/643594.research.SV.vcf\n\nmadeline: tests/fixtures/madeline.xml\ndefault_gene_panels: [panel1]\ngene_panels: [panel1]\n\n# meta data\nrank_model_version: 1.12\nrank_score_threshold: -100\nanalysis_date: 2016-10-12 14:00:46\nhuman_genome_build: GRCh.37", 
            "title": "Scout Load Config"
        }, 
        {
            "location": "/user-guide/pages/", 
            "text": "Pages\n\n\nScout can be logically separated into a number of pages with different responsibility and purpose. The core pages include institues, cases, case, variants, and variant.\n\n\nThis document describes each page, it's purpose, function, and intended use.\n\n\n\n\nIndex\n\n\nThe \"landing page\". This is your default view where all users who aren't logged in will arrive at. It's main purpose is to introduce potentially new users to the website. It also allows you to sign in.\n\n\nSign up\n\n\nNew users have to apply for access prior to logging in the first time. The team leaders for each institute are required to sign off on new users.\n\n\nSign in\n\n\nWe have chosen to use Google OAuth for the signup process. This means that you click on a button on the first page which launches the OAuth process. When the user is returned, you will see your customized welcome page.\n\n\nWe also use separate \n@clinicalgenomics.se\n accounts to be able to enforce 2-factor authentication.\n\n\n\n\nWelcome page\n\n\nThis is the first page a you see after logging in. Notice your first name in the upper right corner. You can also access the list of institutes you belong to.\n\n\nInstitute selection\n\n\nUsers can belong to multiple institutes. Each institutes defines what cases can be viewed by the user. If you only belong to a single institute you will be redirected automatically to \"Cases\".\n\n\n% Refer to cases.md here\n% Refer to variants.md", 
            "title": "Pages"
        }, 
        {
            "location": "/user-guide/pages/#pages", 
            "text": "Scout can be logically separated into a number of pages with different responsibility and purpose. The core pages include institues, cases, case, variants, and variant.  This document describes each page, it's purpose, function, and intended use.", 
            "title": "Pages"
        }, 
        {
            "location": "/user-guide/pages/#index", 
            "text": "The \"landing page\". This is your default view where all users who aren't logged in will arrive at. It's main purpose is to introduce potentially new users to the website. It also allows you to sign in.", 
            "title": "Index"
        }, 
        {
            "location": "/user-guide/pages/#sign-up", 
            "text": "New users have to apply for access prior to logging in the first time. The team leaders for each institute are required to sign off on new users.", 
            "title": "Sign up"
        }, 
        {
            "location": "/user-guide/pages/#sign-in", 
            "text": "We have chosen to use Google OAuth for the signup process. This means that you click on a button on the first page which launches the OAuth process. When the user is returned, you will see your customized welcome page.  We also use separate  @clinicalgenomics.se  accounts to be able to enforce 2-factor authentication.", 
            "title": "Sign in"
        }, 
        {
            "location": "/user-guide/pages/#welcome-page", 
            "text": "This is the first page a you see after logging in. Notice your first name in the upper right corner. You can also access the list of institutes you belong to.", 
            "title": "Welcome page"
        }, 
        {
            "location": "/user-guide/pages/#institute-selection", 
            "text": "Users can belong to multiple institutes. Each institutes defines what cases can be viewed by the user. If you only belong to a single institute you will be redirected automatically to \"Cases\".  % Refer to cases.md here\n% Refer to variants.md", 
            "title": "Institute selection"
        }, 
        {
            "location": "/user-guide/panels/", 
            "text": "Gene Panels\n\n\nThis page describes gene panels, how they are annotated and how they are used in scout.\n\n\nGeneral\n\n\nScout is developed to be used in a clinical setting and therefor gene panels is a central concept. The gene panels describes a set of genes with additional information that is often associated with a disease or a disease group.\nA case can then be associated with one or several gene panels.\n\n\nStructure\n\n\nThe gene panel is a tab separated text file with a header that describes the columns and one line for each gene entry.\n\n\nThe columns that will be used by scout is the following:\n\n\n- **hgnc_id(int)** This identifies the gene. *Mandatory*\n- **hgnc_symbol(str)** This is used for sanity check when humans look at the file. *Optional*\n- **disease_associated_transcripts(str)** ','-separated list of manually curated transcripts. *Optional*\n- **genetic_disease_models(str)** ','-separated list of manually curated inheritance patterns that are followed for a gene. *Optional*\n- **mosaicism(str)** If a gene is known to be associated with mosaicism this is annotated. *Optional*\n- **reduced_penetrance(str)** If a gene is known to have reduced penetrance this is annotated. *Optional*\n- **database_entry_version(str)** The database entry version is a way to track when a a gene was added or modified. *Optional*\n\n\n\nEach gene in a gene panel have to be identified with a hgnc id\n\n\nNotes on entries\n\n\nhgnc_id\n: This one have to be a valid hgnc id that exists in scout\n\ngenetic_disease_models\n can be anyone in [AR,AD,XR,XD,MT,X,Y]\n\nmosaicism\n Any entry here will be interpreted as true\n\nreduced_penetrance\n Any entry here will be interpreted as true\n\ndatabase_entry_version\n This should refer to a earlier version of the panel", 
            "title": "Panels"
        }, 
        {
            "location": "/user-guide/panels/#gene-panels", 
            "text": "This page describes gene panels, how they are annotated and how they are used in scout.", 
            "title": "Gene Panels"
        }, 
        {
            "location": "/user-guide/panels/#general", 
            "text": "Scout is developed to be used in a clinical setting and therefor gene panels is a central concept. The gene panels describes a set of genes with additional information that is often associated with a disease or a disease group.\nA case can then be associated with one or several gene panels.", 
            "title": "General"
        }, 
        {
            "location": "/user-guide/panels/#structure", 
            "text": "The gene panel is a tab separated text file with a header that describes the columns and one line for each gene entry.  The columns that will be used by scout is the following:  - **hgnc_id(int)** This identifies the gene. *Mandatory*\n- **hgnc_symbol(str)** This is used for sanity check when humans look at the file. *Optional*\n- **disease_associated_transcripts(str)** ','-separated list of manually curated transcripts. *Optional*\n- **genetic_disease_models(str)** ','-separated list of manually curated inheritance patterns that are followed for a gene. *Optional*\n- **mosaicism(str)** If a gene is known to be associated with mosaicism this is annotated. *Optional*\n- **reduced_penetrance(str)** If a gene is known to have reduced penetrance this is annotated. *Optional*\n- **database_entry_version(str)** The database entry version is a way to track when a a gene was added or modified. *Optional*  Each gene in a gene panel have to be identified with a hgnc id", 
            "title": "Structure"
        }, 
        {
            "location": "/user-guide/panels/#notes-on-entries", 
            "text": "hgnc_id : This one have to be a valid hgnc id that exists in scout genetic_disease_models  can be anyone in [AR,AD,XR,XD,MT,X,Y] mosaicism  Any entry here will be interpreted as true reduced_penetrance  Any entry here will be interpreted as true database_entry_version  This should refer to a earlier version of the panel", 
            "title": "Notes on entries"
        }, 
        {
            "location": "/user-guide/using-scout/", 
            "text": "Pinning a variant\n\n\nIf you find a variant that seems interesting enough that you believe someone should follow it up, you could consider \"pinning it\" to the case. This means that it will show up for all users to see in the case view along other pinned variants.\n\n\nA variant can be pinned by anyone and likewise unpinned by anyone (not just the person who originally pinned it). The activity log will store records of who did what for future reference, however.\n\n\n\n\nIn the future, we would also like to add the possibility of linking a confirmed disease causing mutation to a specific case. One could imagine that process to start of by suspecting a variant, pinning it, confirming the mutation, and lastly tagging it as disease causing. This would also allow us to build up a local database of conclusive findings which would be valuable on it's own.\n\n\n\n\nSending Sanger email\n\n\nIt's possible to send an email to a user defined email address with information regarding a variant for Sanger validation. You can access this functionality through the variant detail view in the upper right ahnd corner.\n\n\nLocal Frequency Database\n\n\nThis is not really a local \nfrequency\n database but rather an indication if we have seen a variant before and in what form. It should work as a guide to exclude variants that exists due to artifacts in the sequencing process or if it as been observed in any of the earlier cases.\nVariants are added to the database in the following way:\n\n\n\n\nFor each case we pick one affected individual\n\n\nVariants are filtered out based on if they are common or have a very low call quality\n\n\nThe remaining variants are stored in loqusdb\n\n\n\n\nEach time the user looks at a variant scout will ask locusdb how many times it has been seen across \nall\n cases from all institutes (obs.), how many times it has been seen in a homozygous state (homo.) and how many cases these numbers are based on (tot.).", 
            "title": "Using scout"
        }, 
        {
            "location": "/user-guide/using-scout/#pinning-a-variant", 
            "text": "If you find a variant that seems interesting enough that you believe someone should follow it up, you could consider \"pinning it\" to the case. This means that it will show up for all users to see in the case view along other pinned variants.  A variant can be pinned by anyone and likewise unpinned by anyone (not just the person who originally pinned it). The activity log will store records of who did what for future reference, however.   In the future, we would also like to add the possibility of linking a confirmed disease causing mutation to a specific case. One could imagine that process to start of by suspecting a variant, pinning it, confirming the mutation, and lastly tagging it as disease causing. This would also allow us to build up a local database of conclusive findings which would be valuable on it's own.", 
            "title": "Pinning a variant"
        }, 
        {
            "location": "/user-guide/using-scout/#sending-sanger-email", 
            "text": "It's possible to send an email to a user defined email address with information regarding a variant for Sanger validation. You can access this functionality through the variant detail view in the upper right ahnd corner.", 
            "title": "Sending Sanger email"
        }, 
        {
            "location": "/user-guide/using-scout/#local-frequency-database", 
            "text": "This is not really a local  frequency  database but rather an indication if we have seen a variant before and in what form. It should work as a guide to exclude variants that exists due to artifacts in the sequencing process or if it as been observed in any of the earlier cases.\nVariants are added to the database in the following way:   For each case we pick one affected individual  Variants are filtered out based on if they are common or have a very low call quality  The remaining variants are stored in loqusdb   Each time the user looks at a variant scout will ask locusdb how many times it has been seen across  all  cases from all institutes (obs.), how many times it has been seen in a homozygous state (homo.) and how many cases these numbers are based on (tot.).", 
            "title": "Local Frequency Database"
        }, 
        {
            "location": "/user-guide/variants/", 
            "text": "Variants\n\n\nThe big list of variants. This page serves as an overview of all data and annotations for a single case. It's meant to allow you to skim through many variants ordered by the ranking.\n\n\nThe first couple of columns are meant to give you a sense of place in the overall ranked list. The \"Rank\" column is especially useful after applying various filters.\n\n\nHovering over both \"1000 Genomes\" (frequency) and \"CADD score\" (severity) columns will reveal additional metrics in a popup.\n\n\nHovering over \"Inheritance models\" will pop up a list of all possible compounds if the variants follows this pattern.\n\n\nAt the bottom of the list you will find a button to load the next batch of variants in the list. To return to the previous batch of variants, just press the browser back button.\n\n\nIt's also possible to filter the variants using a number of different criteria. Open the filters panel by clicking the \"filter\" icon in the top right. Here you can fill in form and click \"Filter variants\" to update the list. This is also the place where you switch gene lists.\n\n\n\n\nVariant\n\n\nThis is the most complex view with a lot of related data presented to the user in a compact way. A lot of thought went into the design of the layout so here it the imagined workflow.\n\n\nToolbar\n\n\nTwo options are added to the right side of the menu:\n\n\n\n\nSend Sanger email to an institute related email address.\n\n\nPin the current variant as interesting so that it shows up in the case view.\n\n\nMark variant as causative. This is only to be used when a variant is confirmed to be causative - it will set the case to \"solved\" automatically.\n\n\n\n\nFixed header\n\n\nIntroduces the basic facts of the variant that the user is often referring back to. As an example you need to refer back to the chromosome when assessing possible inheritance models.\n\n\nSummary\n\n\nThis is the first a user looks at when assesing the variant.\n\n\n\n\nRank score/CADD score\n\n\nDisease gene model, possible inheritance models, OMIM model\n\n\nFrequencies\n\n\nCLINSIG number\n\n\n\n\nDetails\n\n\nDepending on the first assessment, this section represents what a user digs deeper into.\n\n\nFunctional Annotation\n\n\nThis is the worst functional impact of all transcripts\n\n\nRegion Annotation\n\n\nThis is the region of the most severe functional impact\n\n\nSift Prediction\n\n\nThis is most severe sift prediction of all transcripts\n\n\nPolyphen Prediction\n\n\nThis is most severe polyphen prediction of all transcripts\n\n\n\n\nPredicted protein changes\n\n\nSeverities\n\n\nConservation\n\n\n\n\n=\n \"Matrix\" with highlighted cells (significant numbers)\n\n\nGT Call\n\n\nCompounds\n\n\nOnly interesting when the compound inheritance pattern is required, the list can be very long - best to put it far down the page.", 
            "title": "Variants"
        }, 
        {
            "location": "/user-guide/variants/#variants", 
            "text": "The big list of variants. This page serves as an overview of all data and annotations for a single case. It's meant to allow you to skim through many variants ordered by the ranking.  The first couple of columns are meant to give you a sense of place in the overall ranked list. The \"Rank\" column is especially useful after applying various filters.  Hovering over both \"1000 Genomes\" (frequency) and \"CADD score\" (severity) columns will reveal additional metrics in a popup.  Hovering over \"Inheritance models\" will pop up a list of all possible compounds if the variants follows this pattern.  At the bottom of the list you will find a button to load the next batch of variants in the list. To return to the previous batch of variants, just press the browser back button.  It's also possible to filter the variants using a number of different criteria. Open the filters panel by clicking the \"filter\" icon in the top right. Here you can fill in form and click \"Filter variants\" to update the list. This is also the place where you switch gene lists.", 
            "title": "Variants"
        }, 
        {
            "location": "/user-guide/variants/#variant", 
            "text": "This is the most complex view with a lot of related data presented to the user in a compact way. A lot of thought went into the design of the layout so here it the imagined workflow.", 
            "title": "Variant"
        }, 
        {
            "location": "/user-guide/variants/#toolbar", 
            "text": "Two options are added to the right side of the menu:   Send Sanger email to an institute related email address.  Pin the current variant as interesting so that it shows up in the case view.  Mark variant as causative. This is only to be used when a variant is confirmed to be causative - it will set the case to \"solved\" automatically.", 
            "title": "Toolbar"
        }, 
        {
            "location": "/user-guide/variants/#fixed-header", 
            "text": "Introduces the basic facts of the variant that the user is often referring back to. As an example you need to refer back to the chromosome when assessing possible inheritance models.", 
            "title": "Fixed header"
        }, 
        {
            "location": "/user-guide/variants/#summary", 
            "text": "This is the first a user looks at when assesing the variant.   Rank score/CADD score  Disease gene model, possible inheritance models, OMIM model  Frequencies  CLINSIG number", 
            "title": "Summary"
        }, 
        {
            "location": "/user-guide/variants/#details", 
            "text": "Depending on the first assessment, this section represents what a user digs deeper into.", 
            "title": "Details"
        }, 
        {
            "location": "/user-guide/variants/#functional-annotation", 
            "text": "This is the worst functional impact of all transcripts", 
            "title": "Functional Annotation"
        }, 
        {
            "location": "/user-guide/variants/#region-annotation", 
            "text": "This is the region of the most severe functional impact", 
            "title": "Region Annotation"
        }, 
        {
            "location": "/user-guide/variants/#sift-prediction", 
            "text": "This is most severe sift prediction of all transcripts", 
            "title": "Sift Prediction"
        }, 
        {
            "location": "/user-guide/variants/#polyphen-prediction", 
            "text": "This is most severe polyphen prediction of all transcripts   Predicted protein changes  Severities  Conservation   =  \"Matrix\" with highlighted cells (significant numbers)", 
            "title": "Polyphen Prediction"
        }, 
        {
            "location": "/user-guide/variants/#gt-call", 
            "text": "", 
            "title": "GT Call"
        }, 
        {
            "location": "/user-guide/variants/#compounds", 
            "text": "Only interesting when the compound inheritance pattern is required, the list can be very long - best to put it far down the page.", 
            "title": "Compounds"
        }
    ]
}